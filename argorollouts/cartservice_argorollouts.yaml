# ========================================
# CARTSERVICE ROLLOUT (Self-contained)
# ========================================

apiVersion: v1
kind: ServiceAccount
metadata:
  name: cartservice-sa
  namespace: default
---
apiVersion: v1
kind: Service
metadata:
  name: cartservice
  namespace: default
spec:
  type: ClusterIP
  selector:
    app: cartservice
    version: stable   # stable pods only
  ports:
  - name: grpc
    port: 7070
    targetPort: 7070
---
apiVersion: v1
kind: Service
metadata:
  name: cartservice-canary
  namespace: default
spec:
  type: ClusterIP
  selector:
    app: cartservice
    version: canary   # canary pods only
  ports:
  - name: grpc
    port: 7070
    targetPort: 7070
---
apiVersion: argoproj.io/v1alpha1
kind: Rollout
metadata:
  name: cartservice
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      app: cartservice
  template:
    metadata:
      labels:
        app: cartservice
        version: stable   # stable by default
      annotations:
        vault.hashicorp.com/agent-inject: "true"
        vault.hashicorp.com/role: "cartservice-role"
        vault.hashicorp.com/agent-inject-secret-db-creds: "database/creds/cartservice-role"
        vault.hashicorp.com/agent-inject-template-db-creds: |
          {{- with secret "database/creds/cartservice-role" -}}
          export DB_HOST="YOUR_RDS_ENDPOINT.rds.amazonaws.com"
          export DB_PORT="5432"
          export DB_NAME="cart_db"
          export DB_USER="{{ .Data.username }}"
          export DB_PASSWORD="{{ .Data.password }}"
          {{- end -}}
    spec:
      serviceAccountName: cartservice-sa
      terminationGracePeriodSeconds: 5
      containers:
      - name: server
        image: harshakoppu945/cartservice:v1
        ports:
        - containerPort: 7070
        command: ["/bin/sh", "-c"]
        args:
          - |
            for i in $(seq 1 15); do
              [ -s /vault/secrets/db-creds ] && break || sleep 1
            done
            source /vault/secrets/db-creds
            exec /app/cartservice
        env:
        - name: PORT
          value: "7070"
        - name: VERSION
          value: "v1"
        resources:
          requests:
            cpu: 200m
            memory: 64Mi
          limits:
            cpu: 300m
            memory: 128Mi
        readinessProbe:
          initialDelaySeconds: 15
          exec:
            command: ["/bin/grpc_health_probe", "-addr=:7070", "-rpc-timeout=5s"]
        livenessProbe:
          initialDelaySeconds: 15
          periodSeconds: 10
          exec:
            command: ["/bin/grpc_health_probe", "-addr=:7070", "-rpc-timeout=5s"]

  strategy:
    canary:
      canaryService: cartservice-canary
      stableService: cartservice
      trafficRouting:
        istio:
          virtualService:
            name: cartservice-vsvc
            routes:
            - primary
      steps:
      - setWeight: 10
      - pause: {duration: 2m}
      - setWeight: 25
      - pause: {duration: 2m}
      - setWeight: 50
      - pause: {duration: 2m}
      - setWeight: 75
      - pause: {duration: 2m}
      analysis:
        templates:
        - templateName: success-rate
        startingStep: 2
        args:
        - name: service-name
          value: cartservice
